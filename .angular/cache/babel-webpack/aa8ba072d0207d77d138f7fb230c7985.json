{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/socket.services\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction ChatComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"label\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const a_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(a_r1.use);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(a_r1.use);\n  }\n}\n\nexport let ChatComponent = /*#__PURE__*/(() => {\n  class ChatComponent {\n    constructor(activated, sockService) {\n      this.activated = activated;\n      this.sockService = sockService;\n      this.userChat = {\n        user: '',\n        text: ''\n      };\n      this.eventName = \"enviarMensaje\";\n    }\n\n    ngOnInit() {\n      const id = this.activated.snapshot.params.id;\n      this.userChat.user = id;\n      this.sockService.listen(\"MensajeEvento\").subscribe(data => {\n        this.misMensajes = data;\n      });\n    }\n\n    miMensaje() {\n      this.sockService.emit(this.eventName, this.userChat);\n      this.userChat.text = \"\";\n    }\n\n  }\n\n  ChatComponent.ɵfac = function ChatComponent_Factory(t) {\n    return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SocketService));\n  };\n\n  ChatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChatComponent,\n    selectors: [[\"app-chat\"]],\n    decls: 10,\n    vars: 2,\n    consts: [[2, \"width\", \"40%\", \"margin\", \"auto\", \"margin-top\", \"100px\"], [\"for\", \"\"], [2, \"font-weight\", \"bold\"], [\"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [1, \"mt-3\"], [4, \"ngFor\", \"ngForOf\"], [\"for\", \"\", 2, \"font-weight\", \"bold\"]],\n    template: function ChatComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\");\n        i0.ɵɵelementStart(2, \"label\", 1);\n        i0.ɵɵtext(3, \" Hola \");\n        i0.ɵɵelementStart(4, \"span\", 2);\n        i0.ɵɵtext(5, \"((userChat.user))\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(6, \" ...Escribe aqu\\u00ED\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 3);\n        i0.ɵɵlistener(\"change\", function ChatComponent_Template_input_change_7_listener() {\n          return ctx.miMensaje();\n        })(\"ngModelChange\", function ChatComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.userChat.text = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 4);\n        i0.ɵɵtemplate(9, ChatComponent_div_9_Template, 5, 2, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.userChat.text);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.misMensajes);\n      }\n    },\n    directives: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.NgForOf],\n    styles: [\"\"]\n  });\n  return ChatComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}